{
"globallov":{
    "dummylov":{
        "type":"string",
        "label":"Global dummy list of strings",
        "values":    [
        ["glob1","Global string 1"],
        ["glob2","Global string 2"]
        ]
    }
    ,
    "dummylov2":{
        "type":"int",
        "label":"Global dummy list of ints",
        "values":    [
        [1,"Global int 1"],
        [2,"Global int 2"]
        ]
    }
    ,
    "dummylov3":{
        "type":"float",
        "label":"Global dummy list of floats",
        "values":    [
        [1.1,"Global float 1"],
        [2.2,"Global float 2"]
        ]
    }
},
"properties":{
    "extextRO": {
        "devcat": "Examples",
        "elements": {
            "extext1": {
                "type":"string",
                "label": "Text 1"
            },
            "extext2": {
                "type":"string",
                "label": "Text 2"
            },
            "extext3": {
                "type":"string",
                "label": "Text 3"
            },
            "extext4": {
                "type":"string",
                "label": "Text 4"
            }
        },
        "group": "Texts",
        "permission": 0,
        "label": "Text example - read only",
        "order":"00"
    },
    "extextRW": {
        "hasprofile":true,
        "devcat": "Examples",
        "elements": {
            "extext1": {
                "autoupdate":true,
                "type":"string",
                "label": "Text 1",
                "value":"aaaa",
                "directedit":true
            },
            "extext2": {
                "autoupdate":true,
                "type":"string",
                "label": "Text 2",
                "value":"bbbb"
            },
            "extext3": {
                "autoupdate":true,
                "type":"string",
                "label": "Text 3",
                "value":"cccc",
                "listOfValues":"DRIVER_INTERFACE-CCD_INTERFACE",
                "directedit":true
            },
            "extext4": {
                "autoupdate":true,
                "type":"string",
                "label": "Text 4",
                "value":"i1",
                "listOfValues":[
                    ["i1","Value 1"],
                    ["i2","Value 2"]
                ]
            }
        },
        "group": "Texts",
        "permission": 2,
        "label": "Text example - read/write",
        "order":"01"

    },
    "numbersRW": {
        "hasprofile":true,
        "devcat": "Examples",
        "elements": {
            "n1": {
                "autoupdate":true,
                "type":"int",
                "label": "Number 1",
                "min": 0,
                "max": 100,
                "step": 1,
                "directedit":true
            },
            "n2": {
                "autoupdate":true,
                "type":"int",
                "label": "Number 2",
                "min": -100,
                "max": 100,
                "step": 10
            },
            "n3": {
                "autoupdate":true,
                "type":"float",
                "label": "Number 3",
                "listOfValues":[
                    [0.0,"Zéro virgule zéro"],
                    [0.1,"Zéro virgule un"],
                    [0.2,"Zéro virgule deux"]
                ]
            },
            "n4": {
                "autoupdate":true,
                "type":"int",
                "label": "Number 4",
                "listOfValues":[
                    [0,"Zéro"],
                    [1,"Un"],
                    [2,"Deux"]
                ],
                "directedit":true
            },
            "n5": {
                "autoupdate":true,
                "type":"float",
                "label": "Number 5",
                "listOfValues":"dummylov3"
            }
        },
        "group": "Numbers",
        "permission": 2,
        "label": "Numbers example - read/write"
    },
    "boolsRW0": {
        "hasprofile":true,
        "devcat": "Examples",
        "rule":0,
        "elements": {
            "b1": {
                "autoupdate":true,
                "type":"bool",
                "label": "Bool 1"
            },
            "b2": {
                "autoupdate":true,
                "type":"bool",
                "label": "Bool 2"
            },
            "b3": {
                "autoupdate":true,
                "type":"bool",
                "label": "Bool 3"
            },
            "b4": {
                "autoupdate":true,
                "type":"bool",
                "label": "Bool 4"
            }
        },
        "group": "Booleans",
        "permission": 2,
        "label": "One of many"
    },
    "boolsRW1": {
        "hasprofile":true,
        "devcat": "Examples",
        "rule":1,
        "elements": {
            "b1": {
                "autoupdate":true,
                "type":"bool",
                "label": "Bool 1"
            },
            "b2": {
                "autoupdate":true,
                "type":"bool",
                "label": "Bool 2"
            },
            "b3": {
                "autoupdate":true,
                "type":"bool",
                "label": "Bool 3"
            },
            "b4": {
                "autoupdate":true,
                "type":"bool",
                "label": "Bool 4"
            }
        },
        "group": "Booleans",
        "permission": 2,
        "label": "At most one"
    },
    "boolsRW2": {
        "hasprofile":true,
        "devcat": "Examples",
        "rule":2,
        "elements": {
            "b1": {
                "autoupdate":true,
                "type":"bool",
                "label": "Bool 1"
            },
            "b2": {
                "autoupdate":true,
                "type":"bool",
                "label": "Bool 2"
            },
            "b3": {
                "autoupdate":true,
                "type":"bool",
                "label": "Bool 3"
            },
            "b4": {
                "autoupdate":true,
                "type":"bool",
                "label": "Bool 4"
            }
        },
        "group": "Booleans",
        "permission": 2,
        "label": "Any"
    }
    ,
    "mixedRW": {
        "hasprofile":true,
        "devcat": "Examples",
        "rule":0,
        "elements": {
            "b1": {
                "autoupdate":true,
                "type":"bool",
                "label": "Bool 1/3"
            },
            "b2": {
                "autoupdate":true,
                "type":"bool",
                "label": "Bool 2/3"
            },
            "b3": {
                "autoupdate":true,
                "type":"bool",
                "label": "Bool 3/3"
            },
            "n1": {
                "autoupdate":true,
                "type":"int",
                "label": "Number 1/2",
                "min": 0,
                "max": 100,
                "step": 1
            },
            "n2": {
                "autoupdate":true,
                "type":"int",
                "label": "Number 2/2",
                "min": -100,
                "max": 100,
                "step": 10
            },
            "t1": {
                "autoupdate":true,
                "type":"string",
                "label": "Text mixed"
            }
        },
        "group": "Mixed",
        "permission": 2,
        "label": "Mixed types - read/write"
    },
    "actions2": {
        "devcat": "Examples",
        "rule":1,
        "elements": {
            "shoot": {
                "type": "bool",
                "label": "Shoot",
                "value":false
            },
            "solve": {
                "type": "bool",
                "label": "Solve field",
                "value":false
            },
            "blob": {
                "type": "bool",
                "label": "Set blob mode",
                "value":false
            },
            "extract": {
                "type": "bool",
                "label": "Stars extraction",
                "value":false
            }

        },
        "group": "Images",
        "permission": 2,
        "label": "Actions"
    },
    "parameters": {
        "devcat": "Examples",
        "group": "Images",
        "permission": 2,
        "label": "Parameters",
        "elements": {
            "exposure": {
                "autoupdate":true,
                "directedit":true,
                "type": "float",
                "label": "Exposure",
                "value":10,
                "step":0.001,
                "min":0.001,
                "max":3600,
                "format": "99.99"
            },
            "indexfolderpath": {
                "autoupdate":true,
                "directedit":true,
                "type": "string",
                "label": "Astrometry index folder path",
                "value":"/usr/share/astrometry/"
            }


        }
    },
    "testimage": {
        "devcat": "Examples",
        "group": "Images",
        "permission": 0,
        "label": "Test image",
        "elements": {
            "image1": {
                "type": "img",
                "label": "First image",
                "urljpeg":"./dummy.jpg"
            },
            "message": {
                "type": "message",
                "label": "Image message",
                "level":0
            }
        }
    },
    "testgrid": {
        "hasArray":true,
        "devcat": "Examples",
        "group": "Grids",
        "permission": 2,
        "arrayLimit":5,
        "label": "Grid example",
        "elements": {
            "graph": {
                "type": "graph",
                "graphtype":"XY",
                "params":{
                    "X":"X",
                    "Y":"Y"
                }
            },
            "X": {
                "type": "int",
                "label": "Abscisse",
                "value":0,
                "gridvalues":[0,1,2,3,4],
                "order":"B"
            },
            "Y": {
                "type": "int",
                "label": "Ordonnée",
                "value":0,
                "gridvalues":[0,1,4,9,16],
                "order":"C"
            },
            "Z": {
                "type": "string",
                "label": "Info",
                "value":"Zéro",
                "gridvalues":["P0","P1","P2","P3","P4"],
                "order":"A"
            }
        },
        "array":{
            "key": "",
            "columns":["X","Y"],
            "type":"grid"
        }
    },
    "secondtestgrid": {
        "hasArray":true,
        "devcat": "Examples",
        "group": "AAAGrids",
        "permission": 2,
        "grid":0,
        "gridlimit":5,
        "label": "Grid example 2",
        "elements": {
            "X": {
                "type": "int",
                "label": "Abscisse",
                "value":0,
                "gridvalues":[],
                "order":"B"
            },
            "Y": {
                "type": "int",
                "label": "Ordonnée",
                "value":0,
                "gridvalues":[],
                "order":"C"
            },
            "Z": {
                "type": "string",
                "label": "Info",
                "value":"Zéro",
                "gridvalues":[],
                "order":"A"
            }
        },
        "array":{
            "key": "",
            "columns":["X","Y"],
            "type":"grid"
        }
    },
    "skychart": {
        "label": "Skychart",
        "devcat": "Examples",
        "group": "Images",
        "elements": {}
    },
    "search": {
        "devcat": "Examples",
        "order": "Catalog00",
        "group": "Catalog",
        "permission": 2,
        "rule":0,
        "label": "",
        "autoupdate":true,
        "elements": {
            "searchbtn": {
                "type": "bool",
                "label": "Search object",
                "value":false
            },
            "search": {
                "autoupdate":true,
                "type": "string",
                "label": "Search object",
                "value":"M13",
                "directedit":true
            }
        }
    },
    "results": {
        "devcat": "Examples",
        "order": "Catalog10",
        "group": "Catalog",
        "permission": 0,
        "hasArray":true,
        "gridlimit":255,
        "rule":0,
        "label": "Results",
        "elements": {
            "catalog": {
                "type": "string",
                "label": "Catalogue",
                "order":"10",
                "value":""
            },
            "code": {
                "type": "string",
                "label": "Code",
                "order":"20",
                "value":""
            },
            "RA": {
                "type": "float",
                "label": "RA",
                "order":"30",
                "value":0
            },
            "NS": {
                "type": "string",
                "label": "N/S",
                "order":"50",
                "value":""
            },
            "DEC": {
                "type": "float",
                "label": "DEC",
                "order":"40",
                "value":0
            },
            "diam": {
                "type": "float",
                "label": "Diameter",
                "order":"60",
                "value":0
            },
            "mag": {
                "type": "float",
                "label": "Magnitude",
                "order":"70",
                "value":0
            },
            "name": {
                "type": "string",
                "label": "Name",
                "order":"80",
                "value":""
            },
            "alias": {
                "type": "string",
                "label": "Alias",
                "order":"90",
                "value":""
            }
        }
    },
    "selection": {
        "devcat": "Examples",
        "order": "Catalog15",
        "group": "Catalog",
        "permission": 2,
        "rule":0,
        "label": "Selection",
        "elements": {
            "code": {
                "type": "string",
                "label": "Code",
                "order":"10",
                "value":""
            },
            "RA": {
                "type": "float",
                "label": "RA",
                "order":"20",
                "value":0
            },
            "NS": {
                "type": "string",
                "label": "N/S",
                "order":"40",
                "value":""
            },
            "DEC": {
                "type": "float",
                "label": "DEC",
                "order":"30",
                "value":0
            }
        }
    },
    "lovevents":{
        "devcat": "Examples",
        "order": "00",
        "group": "List of values",
        "permission": 2,
        "rule":2,
        "label": "Test list of values",
        "elements": {
            "code": {
                "type": "string",
                "label": "Code",
                "order":"10",
                "gridvalues":[],
                "autoupdate":true,
                "directedit":true,
                "value":""
            },
            "btn": {
                "type": "bool",
                "label": "Code",
                "order":"11",
                "value":false
            }
        }
    }
}
}
